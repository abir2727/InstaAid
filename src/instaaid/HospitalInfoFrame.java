/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instaaid;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author HP
 */
public class HospitalInfoFrame extends javax.swing.JFrame {

    /**
     * Creates new form HospitalInfoFrame
     */
    public HospitalInfoFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Lalbagh = new javax.swing.JButton();
        Kotwali = new javax.swing.JButton();
        Khilkhet = new javax.swing.JButton();
        Khilgaon = new javax.swing.JButton();
        Kamrangirchar = new javax.swing.JButton();
        Kalabagan = new javax.swing.JButton();
        Kafrul = new javax.swing.JButton();
        Kadamtali = new javax.swing.JButton();
        Hazaribagh = new javax.swing.JButton();
        Gulshan = new javax.swing.JButton();
        Gandaria = new javax.swing.JButton();
        Dhanmondi = new javax.swing.JButton();
        Demra = new javax.swing.JButton();
        Chawkbazar = new javax.swing.JButton();
        Cantonment = new javax.swing.JButton();
        Badda = new javax.swing.JButton();
        Adabar = new javax.swing.JButton();
        Wari = new javax.swing.JButton();
        Uttara = new javax.swing.JButton();
        TejgaonIndustrialArea = new javax.swing.JButton();
        Tejgaon = new javax.swing.JButton();
        Bangsal = new javax.swing.JButton();
        Sutrapur = new javax.swing.JButton();
        SherEBanglaNagar = new javax.swing.JButton();
        Shahbagh = new javax.swing.JButton();
        ShahAli = new javax.swing.JButton();
        Rampura = new javax.swing.JButton();
        Panthapath = new javax.swing.JButton();
        Paltan = new javax.swing.JButton();
        Pallabi = new javax.swing.JButton();
        NewMarket = new javax.swing.JButton();
        Motijheel = new javax.swing.JButton();
        Mohammadpur = new javax.swing.JButton();
        Mirpur = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jScrollPane2.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("InstaAid");
        setLocation(new java.awt.Point(200, 30));
        setPreferredSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(null);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 280, 720, 410);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/instaaid/Back-Arrow-Icon-PNG-715x715.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 20, 50, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/instaaid/Hospital-Sign-resized.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 720, 280);

        jPanel2.setBackground(new java.awt.Color(135, 206, 250));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Choose Your Location");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(140, 40, 260, 29);

        Lalbagh.setBackground(new java.awt.Color(0, 0, 153));
        Lalbagh.setForeground(new java.awt.Color(255, 255, 255));
        Lalbagh.setText("Lalbagh");
        Lalbagh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LalbaghActionPerformed(evt);
            }
        });
        jPanel2.add(Lalbagh);
        Lalbagh.setBounds(40, 590, 200, 23);

        Kotwali.setBackground(new java.awt.Color(0, 0, 153));
        Kotwali.setForeground(new java.awt.Color(255, 255, 255));
        Kotwali.setText("Kotwali");
        Kotwali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KotwaliActionPerformed(evt);
            }
        });
        jPanel2.add(Kotwali);
        Kotwali.setBounds(40, 560, 200, 23);

        Khilkhet.setBackground(new java.awt.Color(0, 0, 153));
        Khilkhet.setForeground(new java.awt.Color(255, 255, 255));
        Khilkhet.setText("Khilkhet");
        Khilkhet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KhilkhetActionPerformed(evt);
            }
        });
        jPanel2.add(Khilkhet);
        Khilkhet.setBounds(40, 530, 200, 23);

        Khilgaon.setBackground(new java.awt.Color(0, 0, 153));
        Khilgaon.setForeground(new java.awt.Color(255, 255, 255));
        Khilgaon.setText("Khilgaon");
        Khilgaon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KhilgaonActionPerformed(evt);
            }
        });
        jPanel2.add(Khilgaon);
        Khilgaon.setBounds(40, 500, 200, 23);

        Kamrangirchar.setBackground(new java.awt.Color(0, 0, 153));
        Kamrangirchar.setForeground(new java.awt.Color(255, 255, 255));
        Kamrangirchar.setText("Kamrangirchar");
        Kamrangirchar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KamrangircharActionPerformed(evt);
            }
        });
        jPanel2.add(Kamrangirchar);
        Kamrangirchar.setBounds(40, 470, 200, 23);

        Kalabagan.setBackground(new java.awt.Color(0, 0, 153));
        Kalabagan.setForeground(new java.awt.Color(255, 255, 255));
        Kalabagan.setText("Kalabagan");
        Kalabagan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KalabaganActionPerformed(evt);
            }
        });
        jPanel2.add(Kalabagan);
        Kalabagan.setBounds(40, 440, 200, 23);

        Kafrul.setBackground(new java.awt.Color(0, 0, 153));
        Kafrul.setForeground(new java.awt.Color(255, 255, 255));
        Kafrul.setText("Kafrul");
        Kafrul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KafrulActionPerformed(evt);
            }
        });
        jPanel2.add(Kafrul);
        Kafrul.setBounds(40, 410, 200, 23);

        Kadamtali.setBackground(new java.awt.Color(0, 0, 153));
        Kadamtali.setForeground(new java.awt.Color(255, 255, 255));
        Kadamtali.setText("Kadamtali");
        Kadamtali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KadamtaliActionPerformed(evt);
            }
        });
        jPanel2.add(Kadamtali);
        Kadamtali.setBounds(40, 380, 200, 23);

        Hazaribagh.setBackground(new java.awt.Color(0, 0, 153));
        Hazaribagh.setForeground(new java.awt.Color(255, 255, 255));
        Hazaribagh.setText("Hazaribagh");
        Hazaribagh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HazaribaghActionPerformed(evt);
            }
        });
        jPanel2.add(Hazaribagh);
        Hazaribagh.setBounds(40, 350, 200, 23);

        Gulshan.setBackground(new java.awt.Color(0, 0, 153));
        Gulshan.setForeground(new java.awt.Color(255, 255, 255));
        Gulshan.setText("Gulshan");
        Gulshan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GulshanActionPerformed(evt);
            }
        });
        jPanel2.add(Gulshan);
        Gulshan.setBounds(40, 320, 200, 23);

        Gandaria.setBackground(new java.awt.Color(0, 0, 153));
        Gandaria.setForeground(new java.awt.Color(255, 255, 255));
        Gandaria.setText("Gandaria");
        Gandaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GandariaActionPerformed(evt);
            }
        });
        jPanel2.add(Gandaria);
        Gandaria.setBounds(40, 290, 200, 23);

        Dhanmondi.setBackground(new java.awt.Color(0, 0, 153));
        Dhanmondi.setForeground(new java.awt.Color(255, 255, 255));
        Dhanmondi.setText("Dhanmondi");
        Dhanmondi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DhanmondiActionPerformed(evt);
            }
        });
        jPanel2.add(Dhanmondi);
        Dhanmondi.setBounds(40, 260, 200, 23);

        Demra.setBackground(new java.awt.Color(0, 0, 153));
        Demra.setForeground(new java.awt.Color(255, 255, 255));
        Demra.setText("Demra");
        Demra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DemraActionPerformed(evt);
            }
        });
        jPanel2.add(Demra);
        Demra.setBounds(40, 230, 200, 23);

        Chawkbazar.setBackground(new java.awt.Color(0, 0, 153));
        Chawkbazar.setForeground(new java.awt.Color(255, 255, 255));
        Chawkbazar.setText("Chawkbazar");
        Chawkbazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChawkbazarActionPerformed(evt);
            }
        });
        jPanel2.add(Chawkbazar);
        Chawkbazar.setBounds(40, 200, 200, 23);

        Cantonment.setBackground(new java.awt.Color(0, 0, 153));
        Cantonment.setForeground(new java.awt.Color(255, 255, 255));
        Cantonment.setText("Cantonment");
        Cantonment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantonmentActionPerformed(evt);
            }
        });
        jPanel2.add(Cantonment);
        Cantonment.setBounds(40, 170, 200, 23);

        Badda.setBackground(new java.awt.Color(0, 0, 153));
        Badda.setForeground(new java.awt.Color(255, 255, 255));
        Badda.setText("Badda");
        Badda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaddaActionPerformed(evt);
            }
        });
        jPanel2.add(Badda);
        Badda.setBounds(40, 140, 200, 23);

        Adabar.setBackground(new java.awt.Color(0, 0, 153));
        Adabar.setForeground(new java.awt.Color(255, 255, 255));
        Adabar.setText("Adabar");
        Adabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdabarActionPerformed(evt);
            }
        });
        jPanel2.add(Adabar);
        Adabar.setBounds(40, 110, 200, 23);

        Wari.setBackground(new java.awt.Color(0, 0, 153));
        Wari.setForeground(new java.awt.Color(255, 255, 255));
        Wari.setText("Wari");
        Wari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WariActionPerformed(evt);
            }
        });
        jPanel2.add(Wari);
        Wari.setBounds(260, 590, 190, 23);

        Uttara.setBackground(new java.awt.Color(0, 0, 153));
        Uttara.setForeground(new java.awt.Color(255, 255, 255));
        Uttara.setText("Uttara");
        Uttara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UttaraActionPerformed(evt);
            }
        });
        jPanel2.add(Uttara);
        Uttara.setBounds(260, 560, 190, 23);

        TejgaonIndustrialArea.setBackground(new java.awt.Color(0, 0, 153));
        TejgaonIndustrialArea.setForeground(new java.awt.Color(255, 255, 255));
        TejgaonIndustrialArea.setText("Tejgaon Industrial Area");
        TejgaonIndustrialArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TejgaonIndustrialAreaActionPerformed(evt);
            }
        });
        jPanel2.add(TejgaonIndustrialArea);
        TejgaonIndustrialArea.setBounds(260, 530, 190, 23);

        Tejgaon.setBackground(new java.awt.Color(0, 0, 153));
        Tejgaon.setForeground(new java.awt.Color(255, 255, 255));
        Tejgaon.setText("Tejgaon");
        Tejgaon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TejgaonActionPerformed(evt);
            }
        });
        jPanel2.add(Tejgaon);
        Tejgaon.setBounds(260, 500, 190, 23);

        Bangsal.setBackground(new java.awt.Color(0, 0, 153));
        Bangsal.setForeground(new java.awt.Color(255, 255, 255));
        Bangsal.setText("Bangsal");
        Bangsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BangsalActionPerformed(evt);
            }
        });
        jPanel2.add(Bangsal);
        Bangsal.setBounds(260, 470, 190, 23);

        Sutrapur.setBackground(new java.awt.Color(0, 0, 153));
        Sutrapur.setForeground(new java.awt.Color(255, 255, 255));
        Sutrapur.setText("Sutrapur");
        Sutrapur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SutrapurActionPerformed(evt);
            }
        });
        jPanel2.add(Sutrapur);
        Sutrapur.setBounds(260, 440, 190, 23);

        SherEBanglaNagar.setBackground(new java.awt.Color(0, 0, 153));
        SherEBanglaNagar.setForeground(new java.awt.Color(255, 255, 255));
        SherEBanglaNagar.setText("Sher-E-Bangla Nagar");
        SherEBanglaNagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SherEBanglaNagarActionPerformed(evt);
            }
        });
        jPanel2.add(SherEBanglaNagar);
        SherEBanglaNagar.setBounds(260, 410, 190, 25);

        Shahbagh.setBackground(new java.awt.Color(0, 0, 153));
        Shahbagh.setForeground(new java.awt.Color(255, 255, 255));
        Shahbagh.setText("Shahbagh");
        Shahbagh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShahbaghActionPerformed(evt);
            }
        });
        jPanel2.add(Shahbagh);
        Shahbagh.setBounds(260, 380, 190, 23);

        ShahAli.setBackground(new java.awt.Color(0, 0, 153));
        ShahAli.setForeground(new java.awt.Color(255, 255, 255));
        ShahAli.setText("Shah Ali");
        ShahAli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShahAliActionPerformed(evt);
            }
        });
        jPanel2.add(ShahAli);
        ShahAli.setBounds(260, 350, 190, 23);

        Rampura.setBackground(new java.awt.Color(0, 0, 153));
        Rampura.setForeground(new java.awt.Color(255, 255, 255));
        Rampura.setText("Rampura");
        Rampura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RampuraActionPerformed(evt);
            }
        });
        jPanel2.add(Rampura);
        Rampura.setBounds(260, 320, 190, 23);

        Panthapath.setBackground(new java.awt.Color(0, 0, 153));
        Panthapath.setForeground(new java.awt.Color(255, 255, 255));
        Panthapath.setText("Panthapath");
        Panthapath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PanthapathActionPerformed(evt);
            }
        });
        jPanel2.add(Panthapath);
        Panthapath.setBounds(260, 290, 190, 23);

        Paltan.setBackground(new java.awt.Color(0, 0, 153));
        Paltan.setForeground(new java.awt.Color(255, 255, 255));
        Paltan.setText("Paltan");
        Paltan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaltanActionPerformed(evt);
            }
        });
        jPanel2.add(Paltan);
        Paltan.setBounds(260, 260, 190, 23);

        Pallabi.setBackground(new java.awt.Color(0, 0, 153));
        Pallabi.setForeground(new java.awt.Color(255, 255, 255));
        Pallabi.setText("Pallabi");
        Pallabi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PallabiActionPerformed(evt);
            }
        });
        jPanel2.add(Pallabi);
        Pallabi.setBounds(260, 230, 190, 23);

        NewMarket.setBackground(new java.awt.Color(0, 0, 153));
        NewMarket.setForeground(new java.awt.Color(255, 255, 255));
        NewMarket.setText("New Market");
        NewMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewMarketActionPerformed(evt);
            }
        });
        jPanel2.add(NewMarket);
        NewMarket.setBounds(260, 200, 190, 23);

        Motijheel.setBackground(new java.awt.Color(0, 0, 153));
        Motijheel.setForeground(new java.awt.Color(255, 255, 255));
        Motijheel.setText("Motijheel");
        Motijheel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MotijheelActionPerformed(evt);
            }
        });
        jPanel2.add(Motijheel);
        Motijheel.setBounds(260, 170, 190, 23);

        Mohammadpur.setBackground(new java.awt.Color(0, 0, 153));
        Mohammadpur.setForeground(new java.awt.Color(255, 255, 255));
        Mohammadpur.setText("Mohammadpur");
        Mohammadpur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MohammadpurActionPerformed(evt);
            }
        });
        jPanel2.add(Mohammadpur);
        Mohammadpur.setBounds(260, 140, 190, 23);

        Mirpur.setBackground(new java.awt.Color(0, 0, 153));
        Mirpur.setForeground(new java.awt.Color(255, 255, 255));
        Mirpur.setText("Mirpur");
        Mirpur.setPreferredSize(new java.awt.Dimension(73, 25));
        Mirpur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MirpurActionPerformed(evt);
            }
        });
        jPanel2.add(Mirpur);
        Mirpur.setBounds(260, 110, 190, 25);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(720, 0, 540, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UttaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UttaraActionPerformed
        // TODO add your handling code here:
            jTextArea1.selectAll();
            jTextArea1.replaceSelection(" ");
            PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Uttara%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
        
    }//GEN-LAST:event_UttaraActionPerformed

    private void AdabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdabarActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Adabar%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
        
    }//GEN-LAST:event_AdabarActionPerformed

    private void BaddaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaddaActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Badda%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_BaddaActionPerformed

    private void CantonmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantonmentActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Cantonment%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_CantonmentActionPerformed

    private void ChawkbazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChawkbazarActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Chawkbazar%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_ChawkbazarActionPerformed

    private void DemraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DemraActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Demra%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_DemraActionPerformed

    private void DhanmondiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DhanmondiActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Dhanmondi%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_DhanmondiActionPerformed

    private void GandariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GandariaActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Gandaria%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_GandariaActionPerformed

    private void GulshanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GulshanActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Gulshan%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_GulshanActionPerformed

    private void HazaribaghActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HazaribaghActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Hazaribagh%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_HazaribaghActionPerformed

    private void KadamtaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KadamtaliActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Kadamtali%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KadamtaliActionPerformed

    private void KafrulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KafrulActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Kafrul%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KafrulActionPerformed

    private void KalabaganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KalabaganActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Kalabagan%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KalabaganActionPerformed

    private void KamrangircharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KamrangircharActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Kamrangirchar%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KamrangircharActionPerformed

    private void KhilgaonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KhilgaonActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Khilgaon%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KhilgaonActionPerformed

    private void KhilkhetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KhilkhetActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Khilkhet%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_KhilkhetActionPerformed

    private void LalbaghActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LalbaghActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Lalbagh%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_LalbaghActionPerformed

    private void MirpurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MirpurActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Mirpur%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_MirpurActionPerformed

    private void MohammadpurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MohammadpurActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Mohammadpur%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_MohammadpurActionPerformed

    private void MotijheelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MotijheelActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Motijheel%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_MotijheelActionPerformed

    private void NewMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewMarketActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'New Market%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_NewMarketActionPerformed

    private void PallabiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PallabiActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Pallabi%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_PallabiActionPerformed

    private void PaltanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaltanActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Paltan%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_PaltanActionPerformed

    private void PanthapathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PanthapathActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Panthapath%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_PanthapathActionPerformed

    private void RampuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RampuraActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Rampura%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_RampuraActionPerformed

    private void ShahAliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShahAliActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Shah Ali%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_ShahAliActionPerformed

    private void ShahbaghActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShahbaghActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Shahbagh%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_ShahbaghActionPerformed

    private void SherEBanglaNagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SherEBanglaNagarActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Sher-E-Bangla Nagar%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_SherEBanglaNagarActionPerformed

    private void SutrapurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SutrapurActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Sutrapur%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_SutrapurActionPerformed

    private void TejgaonIndustrialAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TejgaonIndustrialAreaActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Tejgaon Industrial Area%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_TejgaonIndustrialAreaActionPerformed

    private void TejgaonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TejgaonActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Tejgaon%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_TejgaonActionPerformed

    private void WariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WariActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Wari%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }
    }//GEN-LAST:event_WariActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new homeframe().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void KotwaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KotwaliActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Kotwali%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }

    }//GEN-LAST:event_KotwaliActionPerformed

    private void BangsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BangsalActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
        jTextArea1.replaceSelection(" ");
        PreparedStatement ps;/*A prepared statement or a parameterized statement is used to execute the same statement repeatedly with high efficiency*/
            ResultSet rs;/*A ResultSet object is a table of data representing a database result set, which is usually generated by executing a statement that queries the database.*/
            String Query=("SELECT * FROM `hospitals` WHERE `Thana` LIKE 'Bangsal%'");
            String s=" ";
        try{
                ps=database2.getConnection().prepareStatement(Query);
               // ps.setString(1, storedUsername);
                //ps.setString(2, storedPassword);
                rs=ps.executeQuery();
                while(rs.next())
                {
                   jTextArea1.append("Hospital Name:   "+rs.getString("name")+"\n"+"Address:   "+rs.getString("address")+"\n"+"Contact:   "+rs.getString("contact")+"\n\n\n");
                    
                }
                
                //int result=ps.executeUpdate();/*executeUpdate. Executes the given SQL statement, which may be an INSERT , UPDATE , or DELETE statement or an SQL statement */
            }catch(SQLException ex)
            {
                Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE,null,ex);            
            }

    }//GEN-LAST:event_BangsalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalInfoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adabar;
    private javax.swing.JButton Badda;
    private javax.swing.JButton Bangsal;
    private javax.swing.JButton Cantonment;
    private javax.swing.JButton Chawkbazar;
    private javax.swing.JButton Demra;
    private javax.swing.JButton Dhanmondi;
    private javax.swing.JButton Gandaria;
    private javax.swing.JButton Gulshan;
    private javax.swing.JButton Hazaribagh;
    private javax.swing.JButton Kadamtali;
    private javax.swing.JButton Kafrul;
    private javax.swing.JButton Kalabagan;
    private javax.swing.JButton Kamrangirchar;
    private javax.swing.JButton Khilgaon;
    private javax.swing.JButton Khilkhet;
    private javax.swing.JButton Kotwali;
    private javax.swing.JButton Lalbagh;
    private javax.swing.JButton Mirpur;
    private javax.swing.JButton Mohammadpur;
    private javax.swing.JButton Motijheel;
    private javax.swing.JButton NewMarket;
    private javax.swing.JButton Pallabi;
    private javax.swing.JButton Paltan;
    private javax.swing.JButton Panthapath;
    private javax.swing.JButton Rampura;
    private javax.swing.JButton ShahAli;
    private javax.swing.JButton Shahbagh;
    private javax.swing.JButton SherEBanglaNagar;
    private javax.swing.JButton Sutrapur;
    private javax.swing.JButton Tejgaon;
    private javax.swing.JButton TejgaonIndustrialArea;
    private javax.swing.JButton Uttara;
    private javax.swing.JButton Wari;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
